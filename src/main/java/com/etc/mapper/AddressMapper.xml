<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.etc.dao.AddressMapper" >
  <resultMap id="BaseResultMap" type="com.etc.entity.Address" >
    <id column="aid" property="aid" jdbcType="INTEGER" />
    <result column="linkman" property="linkman" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="utel" property="utel" jdbcType="INTEGER" />
    <result column="uaddress" property="uaddress" jdbcType="VARCHAR" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    aid, linkman, sex, utel, uaddress, uid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.etc.entity.AddressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from address
    where aid = #{aid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from address
    where aid = #{aid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.etc.entity.AddressExample" >
    delete from address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.etc.entity.Address" >
    <selectKey resultType="java.lang.Integer" keyProperty="aid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into address (linkman, sex, utel, 
      uaddress, uid)
    values (#{linkman,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{utel,jdbcType=INTEGER}, 
      #{uaddress,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.etc.entity.Address" >
    <selectKey resultType="java.lang.Integer" keyProperty="aid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="linkman != null" >
        linkman,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="utel != null" >
        utel,
      </if>
      <if test="uaddress != null" >
        uaddress,
      </if>
      <if test="uid != null" >
        uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="linkman != null" >
        #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="utel != null" >
        #{utel,jdbcType=INTEGER},
      </if>
      <if test="uaddress != null" >
        #{uaddress,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.etc.entity.AddressExample" resultType="java.lang.Integer" >
    select count(*) from address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update address
    <set >
      <if test="record.aid != null" >
        aid = #{record.aid,jdbcType=INTEGER},
      </if>
      <if test="record.linkman != null" >
        linkman = #{record.linkman,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.utel != null" >
        utel = #{record.utel,jdbcType=INTEGER},
      </if>
      <if test="record.uaddress != null" >
        uaddress = #{record.uaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update address
    set aid = #{record.aid,jdbcType=INTEGER},
      linkman = #{record.linkman,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      utel = #{record.utel,jdbcType=INTEGER},
      uaddress = #{record.uaddress,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.etc.entity.Address" >
    update address
    <set >
      <if test="linkman != null" >
        linkman = #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="utel != null" >
        utel = #{utel,jdbcType=INTEGER},
      </if>
      <if test="uaddress != null" >
        uaddress = #{uaddress,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
    </set>
    where aid = #{aid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.etc.entity.Address" >
    update address
    set linkman = #{linkman,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      utel = #{utel,jdbcType=INTEGER},
      uaddress = #{uaddress,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER}
    where aid = #{aid,jdbcType=INTEGER}
  </update>
</mapper>